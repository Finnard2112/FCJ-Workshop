<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Configuring the Security Automation on AWS System Manager</title><link>/3-security-automation/</link><description>Recent content in Configuring the Security Automation on AWS System Manager</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 10 Aug 2025 00:00:00 +0000</lastBuildDate><atom:link href="/3-security-automation/index.xml" rel="self" type="application/rss+xml"/><item><title>Configuring EventBridge</title><link>/3-security-automation/3.1-configure-event-bridge/</link><pubDate>Sun, 10 Aug 2025 00:00:00 +0000</pubDate><guid>/3-security-automation/3.1-configure-event-bridge/</guid><description>This sections walks through the process of editing your Amazon EventBridge rule to make it more specific. By default, the rule might be broad. This procedure will configure it to trigger your security workflow only for the specific types of finding.
Step 1: Navigate to Amazon EventBridge In the AWS Management Console, type &amp;ldquo;EventBridge&amp;rdquo; in the search bar and select it.
Step 2: Select Your Rule In the left-hand navigation pane, click on Rules.</description></item><item><title>Prepare Test Event</title><link>/3-security-automation/3.2-prepare-test-event/</link><pubDate>Sun, 10 Aug 2025 00:00:00 +0000</pubDate><guid>/3-security-automation/3.2-prepare-test-event/</guid><description>To accurately test our security automation workflow, we need a realistic event payload. This guide walks through the process of generating sample threat detections in AWS GuardDuty, finding a specific event, and customizing it to target a real Lambda function in our account.
Step 1: Generate Sample Findings in GuardDuty First, we will have GuardDuty create a set of safe, mock threat detections.
Navigate to the AWS GuardDuty console. In the left-hand navigation menu, click on Settings.</description></item><item><title>Setting up security automation</title><link>/3-security-automation/3.3-setting-up-automation/</link><pubDate>Sun, 10 Aug 2025 00:00:00 +0000</pubDate><guid>/3-security-automation/3.3-setting-up-automation/</guid><description>We need to set up a few more components for our security automation pipeline
1. Create Athena Table The TimelineAnalysisLambda needs a table in Athena to query your CloudTrail logs. You must create this manually.
Go to the Amazon Athena console. Follow the steps in the AWS Documentation to create a table from the logs in your new CloudTrailBucket. The bucket&amp;rsquo;s name is available in the Outputs tab of your CloudFormation stack.</description></item><item><title>Testing the security pipeline</title><link>/3-security-automation/3.4-testing-security-pipeline/</link><pubDate>Sun, 10 Aug 2025 00:00:00 +0000</pubDate><guid>/3-security-automation/3.4-testing-security-pipeline/</guid><description>This guide provides the final end-to-end test for your security automation pipeline. We will manually send a crafted test event to the Amazon EventBridge event bus to simulate a threat detection, which will trigger your entire Step Functions workflow.
Step 1: Prepare the Test Event Payload Copy the JSON template from 3.2 From following section 3.2, you should have a sample GuardDuty UnauthorizedAccess:Lambda/TorRelay finding.
Step 2: Send the event through EventBridge Navigate to the Amazon EventBridge console.</description></item></channel></rss>